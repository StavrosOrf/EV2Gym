:orphan:

:py:mod:`ev2gym.baselines.heuristics`
=====================================

.. py:module:: ev2gym.baselines.heuristics


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ev2gym.baselines.heuristics.RoundRobin
   ev2gym.baselines.heuristics.ChargeAsLateAsPossible
   ev2gym.baselines.heuristics.ChargeAsFastAsPossible
   ev2gym.baselines.heuristics.ChargeAsFastAsPossibleToDesiredCapacity




.. py:class:: RoundRobin(env, verbose=False, **kwargs)


   This is a class that contains the Round Robin heuristic algorithm for the power setpoint tracking problem.
   It does not consider multiple transfomer constraints. 
   And it assumes all chargers have the same number of ports

   .. py:attribute:: algo_name
      :value: 'Round Robin'

      

   .. py:method:: get_env()


   .. py:method:: update_ev_buffer(env)

      This function updates the EV buffer list with the EVs that are currently parked by adding or removing them.


   .. py:method:: get_action(env)



.. py:class:: ChargeAsLateAsPossible(verbose=False, **kwargs)


   This is a class that contains the Charge As Late As Possible heuristic algorithm.

   .. py:attribute:: algo_name
      :value: 'Charge As Late As Possible'

      

   .. py:method:: update_ev_buffer(env)

      This function updates the EV buffer list with the EVs that are currently parked by adding or removing them.


   .. py:method:: get_action(env)



.. py:class:: ChargeAsFastAsPossible(verbose=False, **kwargs)


   This class contains the Charge As Fast As Possible heuristic algorithm.

   .. py:attribute:: algo_name
      :value: 'Charge As Fast As Possible'

      

   .. py:method:: get_action(env)

      This function returns the action list based on the charge as fast as possible algorithm.



.. py:class:: ChargeAsFastAsPossibleToDesiredCapacity(verbose=False, **kwargs)


   This class contains the Charge As Fast As Possible heuristic algorithm.

   .. py:attribute:: algo_name
      :value: 'Charge As Fast As Possible To Desired Capacity'

      

   .. py:method:: get_action(env)

      This function returns the action list based on the charge as fast as possible algorithm.
      It charges the EVs up to their desired capacity.
      Desired capacity can be different than the maximum capacity of the battery.



